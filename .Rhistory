#For the heat dataset, I using the mutate function to assign each column is the correct data type
heatvia <- heatvia %>%
mutate(treat=factor(treat),
time=as.numeric(time),
live=as.numeric(live),
dead=as.numeric(dead),
total=as.numeric(total),
pc_viability=as.numeric(pc_viability))
#Next I am grouping the dataset by BeeID and using summarize to calculate the means for viability, live, dead, total cell counts, mass, and time. I also am taking the unique value of each beeIDs treatment and colony.
hvia1 <-  heatvia %>%
group_by(beeid) %>%
summarize(via = mean(pc_viability, na.rm=TRUE),
live = mean(live, na.rm=TRUE),
dead = mean(dead, na.rm=TRUE),
total= live+dead,
treat = unique(treat),
time = mean(time, na.rm=T),
mass = mean(mass, na.rm=TRUE),
colony = unique(colony))
cvia1
library(ggplot2)
install.packages("ggplot2")
install.packages("ggplot2")
knitr::opts_chunk$set(echo = TRUE)
install.packages("ggplot2")
library(ggplot2)
cvia1 %>%
ggplot(aes(x=treat, y=via, fill=treat)) +
geom_boxplot() +
geom_jitter(position = position_jitterdodge())
#For the chill dataset, I using the mutate function to assign each column is the correct data type
chillvia <- chillvia %>%
mutate(treat=factor(treat),
time=as.numeric(time),
live=as.numeric(live),
dead=as.numeric(dead),
total=as.numeric(total),
pc_viability=as.numeric(pc_viability))
chillvia <- read_xlsx("chillcoma exp.xlsx")
library(readxl)
library(tidyverse)
library(ggplot2)
chillvia <- read_xlsx("chillcoma exp.xlsx")
heatvia <- read_xlsx("heat exp.xlsx")
#For the chill dataset, I using the mutate function to assign each column is the correct data type
chillvia <- chillvia %>%
mutate(treat=factor(treat),
time=as.numeric(time),
live=as.numeric(live),
dead=as.numeric(dead),
total=as.numeric(total),
pc_viability=as.numeric(pc_viability))
#Next I am grouping the dataset by BeeID and using summarize to calculate the means for viability, live, dead, total cell counts, mass, and time. I also am taking the unique value of each beeIDs treatment and colony.
cvia1 <- chillvia %>%
group_by(beeid) %>%
summarize(via = mean(pc_viability, na.rm=TRUE),
live = mean(live, na.rm=TRUE),
dead = mean(dead, na.rm=TRUE),
total= live+dead,
treat = unique(treat),
time = mean(time, na.rm=T),
mass = mean(mass, na.rm=TRUE),
colony = unique(colony))
cvia1
#For the heat dataset, I using the mutate function to assign each column is the correct data type
heatvia <- heatvia %>%
mutate(treat=factor(treat),
time=as.numeric(time),
live=as.numeric(live),
dead=as.numeric(dead),
total=as.numeric(total),
pc_viability=as.numeric(pc_viability))
#Next I am grouping the dataset by BeeID and using summarize to calculate the means for viability, live, dead, total cell counts, mass, and time. I also am taking the unique value of each beeIDs treatment and colony.
hvia1 <-  heatvia %>%
group_by(beeid) %>%
summarize(via = mean(pc_viability, na.rm=TRUE),
live = mean(live, na.rm=TRUE),
dead = mean(dead, na.rm=TRUE),
total= live+dead,
treat = unique(treat),
time = mean(time, na.rm=T),
mass = mean(mass, na.rm=TRUE),
colony = unique(colony))
hvia1
cvia1 %>%
ggplot(aes(x=treat, y=via, fill=treat)) +
geom_boxplot() +
geom_jitter(position = position_jitterdodge())
cvia1 %>%
ggplot(aes(x=treat, y=via, fill=treat)) +
geom_boxplot() +
theme_classic() +
scale_color_manual(values=c("white","blue")) +
labs(x="Treatment", y="% Viability") +
geom_jitter(position = position_jitterdodge())
p <- cvia1 %>%
ggplot(aes(x=treat, y=via)) +
geom_boxplot() +
theme_classic() +
scale_color_manual(values=c("white","blue")) +
labs(x="Treatment", y="% Viability") +
geom_jitter(position = position_jitterdodge())
p+ labs(color = "Treatment")
p + labs(color = "Treatment")
p + labs(color = "Treat")
cvia1 %>%
ggplot(aes(x=treat, y=via)) +
geom_boxplot() +
theme_classic() +
scale_color_manual(values=c("white","blue")) +
labs(x="Treatment", y="% Viability") +
geom_jitter(position = position_jitterdodge())
cvia1 %>%
ggplot(aes(x=treat, y=via, col=treat)) +
geom_boxplot() +
theme_classic() +
scale_color_manual(values=c("white","blue")) +
labs(x="Treatment", y="% Viability") +
geom_jitter(position = position_jitterdodge())
cvia1 %>%
ggplot(aes(x=treat, y=via, fill=treat)) +
geom_boxplot() +
theme_classic() +
scale_color_manual(values=c("white","blue")) +
labs(x="Treatment", y="% Viability") +
geom_jitter(position = position_jitterdodge())
cvia1 %>%
ggplot(aes(x=treat, y=via, fill=treat)) +
geom_boxplot() +
theme_classic() +
scale_fill_manual(values=c("white","blue")) +
labs(x="Treatment", y="% Viability") +
geom_jitter(position = position_jitterdodge())
cvia1 %>%
ggplot(aes(x=treat, y=via, fill=treat)) +
geom_boxplot() +
theme_classic() +
scale_fill_manual(values=c("white","light blue")) +
labs(x="Treatment", y="% Viability") +
geom_jitter(position = position_jitterdodge())
cvia1 %>%
ggplot(aes(x=treat, y=via, fill=treat)) +
geom_boxplot() +
theme_classic() +
scale_fill_manual(values=c("light blue","white")) +
labs(x="Treatment", y="% Viability") +
geom_jitter(position = position_jitterdodge())
cvia1 %>%
ggplot(aes(x = reorder(Control, Chillcoma), y=via, fill=treat)) +
geom_boxplot() +
theme_classic() +
scale_fill_manual(values=c("light blue","white")) +
labs(x="Treatment", y="% Viability") +
geom_jitter(position = position_jitterdodge())
cvia1
cvia1 %>%
ggplot(aes(x=treat, y=via, fill=treat)) +
geom_boxplot() +
theme_classic() +
scale_fill_manual(values=c("light blue","white")) +
labs(x="Treatment", y="% Viability") +
geom_jitter(position = position_jitterdodge())
cvia1 %>%
ggplot(aes(x=treat, y=via, fill=treat)) +
geom_boxplot() +
theme_classic() +
scale_fill_manual(values=c("light blue","white")) +
labs(x="Treatment", y="% Viability") +
labs(fill='NEW LEGEND TITLE') +
geom_jitter(position = position_jitterdodge())
cvia1 %>%
ggplot(aes(x=treat, y=via, fill=treat)) +
geom_boxplot() +
theme_classic() +
scale_fill_manual(values=c("light blue","white")) +
labs(x="Treatment", y="% Viability") +
labs(fill='Treatments') +
geom_jitter(position = position_jitterdodge())
hvia1 %>%
ggplot(aes(x=treat, y=via, fill=treat)) +
geom_boxplot() +
theme_classic() +
scale_fill_manual(values=c("light red","white")) +
labs(x="Treatment", y="% Viability") +
labs(fill='Treatments') +
geom_jitter(position = position_jitterdodge())
#Next I am grouping the dataset by BeeID and using summarize to calculate the means for viability, live, dead, total cell counts, mass, and time. I also am taking the unique value of each beeIDs treatment and colony.
hvia1 <-  heatvia %>%
group_by(beeid) %>%
summarize(via = mean(pc_viability, na.rm=TRUE),
live = mean(live, na.rm=TRUE),
dead = mean(dead, na.rm=TRUE),
total= live+dead,
treat = unique(treat),
time = mean(time, na.rm=T),
mass = mean(mass, na.rm=TRUE),
colony = unique(colony))
hvia1
hvia1 %>%
ggplot(aes(x=treat, y=via, fill=treat)) +
geom_boxplot() +
theme_classic() +
scale_fill_manual(values=c("light red","white")) +
labs(x="Treatment", y="% Viability") +
labs(fill='Treatments') +
geom_jitter(position = position_jitterdodge())
hvia1 %>%
ggplot(aes(x=time, y=via, fill=treat)) +
geom_boxplot() +
theme_classic() +
scale_fill_manual(values=c("light red","white")) +
labs(x="Treatment", y="% Viability") +
labs(fill='Treatments') +
geom_jitter(position = position_jitterdodge())
hvia1 %>%
ggplot(aes(x=treat, y=via, fill=treat)) +
geom_boxplot() +
geom_jitter(position = position_jitterdodge())
hvia1 %>%
ggplot(aes(x=treat, y=via, fill=treat)) +
geom_boxplot() +
theme_classic() +
geom_jitter(position = position_jitterdodge())
hvia1 %>%
ggplot(aes(x=treat, y=via, fill=treat)) +
scale_fill_manual(values=c("white","light red", "red")) +
geom_boxplot() +
theme_classic() +
geom_jitter(position = position_jitterdodge())
hvia1 %>%
ggplot(aes(x=treat, y=via, fill=treat)) +
scale_fill_manual(values=c("white","red", "dark red")) +
geom_boxplot() +
theme_classic() +
geom_jitter(position = position_jitterdodge())
hvia1 %>%
ggplot(aes(x=treat, y=via, fill=treat)) +
scale_fill_manual(values=c("white","red", "dark red")) +
geom_boxplot() +
theme_classic() +
labs(x="Treatment", y="% Viability") +
labs(fill='Treatments') +
geom_jitter(position = position_jitterdodge())
mvias11 %>%
ggplot(aes(x=mass, y=total, col=treat)) +
geom_point()
cvia1 %>%
ggplot(aes(x=mass, y=total, col=treat)) +
geom_point()
cvia1 %>%
ggplot(aes(x=mass, y=via, col=treat)) +
geom_point()
hvia1 %>%
ggplot(aes(x=mass, y=via, col=treat)) +
geom_point()
hvia1 %>%
ggplot(aes(x=mass, y=via, col=treat)) +
geom_point()
cvia1 %>%
ggplot(aes(x=treat, y=via, fill=treat)) +
geom_violin(width=1.4) +
scale_fill_viridis(discrete = TRUE) +
theme_ipsum() +
theme(legend.position="none",
plot.title = element_text(size=11)) +
ggtitle("") +
xlab("")
cvia1 %>%
ggplot(aes(x=treat, y=via, fill=treat)) +
geom_violin(width=1.4) +
scale_fill_viridis(discrete = TRUE) +
theme_ipsum() +
theme(legend.position="none",
plot.title = element_text(size=11)) +
ggtitle("") +
xlab(""))
cvia1 %>%
ggplot(aes(x=treat, y=via, fill=treat)) +
geom_violin(width=1.4) +
theme_classic() +
scale_fill_manual(values=c("light blue","white")) +
labs(x="Treatment", y="% Viability") +
labs(fill='Treatments')
cvia1 %>%
mutate(name = fct_reorder(Control, Chillcoma)) %>%
ggplot(aes(x=treat, y=via, fill=treat)) +
geom_violin(width=1.4) +
theme_classic() +
scale_fill_manual(values=c("light blue","white")) +
labs(x="Treatment", y="% Viability") +
labs(fill='Treatments')
cvia1 %>%
mutate(treat = fct_reorder(Control, Chillcoma)) %>%
ggplot(aes(x=treat, y=via, fill=treat)) +
geom_violin(width=1.4) +
theme_classic() +
scale_fill_manual(values=c("light blue","white")) +
labs(x="Treatment", y="% Viability") +
labs(fill='Treatments')
cvia1 %>%
mutate(treat = char_reorder(Control, Chillcoma)) %>%
ggplot(aes(x=treat, y=via, fill=treat)) +
geom_violin(width=1.4) +
theme_classic() +
scale_fill_manual(values=c("light blue","white")) +
labs(x="Treatment", y="% Viability") +
labs(fill='Treatments')
cvia1$treat = with(cvia1, reorder(Control, Chillcoma))
cvia1
cvia1$treat = with(cvia1, reorder(treat))
cvia1 %>%
ggplot(aes(x=treat, y=via, fill=treat)) +
geom_violin(width=1.4) +
theme_classic() +
scale_fill_manual(values=c("light blue","white")) +
labs(x="Treatment", y="% Viability") +
labs(fill='Treatments')
cvia1 %>%
ggplot(aes(x=treat, y=via, fill=treat)) +
geom_violin(width=1) +
theme_classic() +
scale_fill_manual(values=c("light blue","white")) +
labs(x="Treatment", y="% Viability") +
labs(fill='Treatments')
hvia1 %>%
ggplot(aes(x=treat, y=via, fill=treat)) +
geom_violin(width=1) +
theme_classic() +
scale_fill_manual(values=c("white","red", "dark red")) +
labs(x="Treatment", y="% Viability") +
labs(fill='Treatments')
# cold treatment boxplot
p <- cvia1 %>%
ggplot(aes(x=treat, y=via, fill=treat)) +
geom_boxplot() +
theme_classic() +
scale_fill_manual(values=c("light blue","white")) +
labs(x="Treatment", y="% Viability") +
labs(fill='Treatments') +
geom_jitter(position = position_jitterdodge())
p + scale_x_continuous(trans='log2')
# cold treatment boxplot
cvia1 %>%
ggplot(aes(x=treat, y=via, fill=treat)) +
geom_boxplot() +
theme_classic() +
scale_fill_manual(values=c("light blue","white")) +
labs(x="Treatment", y="% Viability") +
labs(fill='Treatments') +
scale_y_continuous(trans='log10') +
geom_jitter(position = position_jitterdodge())
# cold treatment boxplot
cvia1 %>%
ggplot(aes(x=treat, y=via, fill=treat)) +
geom_boxplot() +
theme_classic() +
scale_fill_manual(values=c("light blue","white")) +
labs(x="Treatment", y="% Viability") +
labs(fill='Treatments') +
geom_jitter(position = position_jitterdodge())
#heat treatment boxplot
hvia1 %>%
ggplot(aes(x=treat, y=via, fill=treat)) +
scale_fill_manual(values=c("white","red", "dark red")) +
geom_boxplot() +
theme_classic() +
labs(x="Treatment", y="% Viability") +
labs(fill='Treatments') +
geom_jitter(position = position_jitterdodge())
#heat treatment boxplot
hvia1 %>%
ggplot(aes(x=treat, y=via, fill=treat)) +
scale_fill_manual(values=c("white","red", "dark red")) +
geom_boxplot() +
theme_classic() +
labs(x="Treatment", y="% Viability") +
labs(fill='Treatments') +
scale_y_continuous(trans='log10') +
geom_jitter(position = position_jitterdodge())
#cold treatment boxplot with y axis log scale to see if data is better visualized
cvia1 %>%
ggplot(aes(x=treat, y=via, fill=treat)) +
geom_boxplot() +
theme_classic() +
scale_fill_manual(values=c("light blue","white")) +
labs(x="Treatment", y="% Viability") +
labs(fill='Treatments') +
scale_y_continuous(trans='log10') +
geom_jitter(position = position_jitterdodge())
#heat treatment boxplot with y axis log scale to see if data is better visualized
hvia1 %>%
ggplot(aes(x=treat, y=via, fill=treat)) +
scale_fill_manual(values=c("white","red", "dark red")) +
geom_boxplot() +
theme_classic() +
labs(x="Treatment", y="% Viability") +
labs(fill='Treatments') +
scale_y_continuous(trans='log10') +
geom_jitter(position = position_jitterdodge())
chillvia <- read_xlsx("chillcoma exp.xlsx")
heatvia <- read_xlsx("heat exp.xlsx")
#For the chill dataset, I using the mutate function to assign each column is the correct data type
chillvia <- chillvia %>%
mutate(treat=factor(treat),
time=as.numeric(time),
live=as.numeric(live),
dead=as.numeric(dead),
total=as.numeric(total),
pc_viability=as.numeric(pc_viability))
#Next I am grouping the dataset by BeeID and using summarize to calculate the means for viability, live, dead, total cell counts, mass, and time. I also am taking the unique value of each beeIDs treatment and colony.
cvia1 <- chillvia %>%
group_by(beeid) %>%
summarize(via = mean(pc_viability, na.rm=TRUE),
live = mean(live, na.rm=TRUE),
dead = mean(dead, na.rm=TRUE),
total= live+dead,
treat = unique(treat),
time = mean(time, na.rm=T),
mass = mean(mass, na.rm=TRUE),
colony = unique(colony))
#For the heat dataset, I using the mutate function to assign each column is the correct data type
heatvia <- heatvia %>%
mutate(treat=factor(treat),
time=as.numeric(time),
live=as.numeric(live),
dead=as.numeric(dead),
total=as.numeric(total),
pc_viability=as.numeric(pc_viability))
#Next I am grouping the dataset by BeeID and using summarize to calculate the means for viability, live, dead, total cell counts, mass, and time. I also am taking the unique value of each beeIDs treatment and colony.
hvia1 <-  heatvia %>%
group_by(beeid) %>%
summarize(via = mean(pc_viability, na.rm=TRUE),
live = mean(live, na.rm=TRUE),
dead = mean(dead, na.rm=TRUE),
total= live+dead,
treat = unique(treat),
time = mean(time, na.rm=T),
mass = mean(mass, na.rm=TRUE),
colony = unique(colony))
cvia1 %>%
ggplot(aes(x=mass, y=via, col=treat)) +
geom_point()
cvia1 %>%
ggplot(aes(x=mass, y=via, col=treat)) +
geom_point()
hvia1 %>%
ggplot(aes(x=mass, y=via, col=treat)) +
geom_point()
hvia1 %>%
ggplot(aes(x=mass, y=via, col=treat)) +
geom_point()
#cold treatment boxplot
p1 <- cvia1 %>%
ggplot(aes(x=treat, y=via, fill=treat)) +
geom_boxplot() +
theme_classic() +
scale_fill_manual(values=c("light blue","white")) +
labs(x="Treatment", y="% Viability") +
labs(fill='Treatments') +
geom_jitter(position = position_jitterdodge())
p1
#cold treatment boxplot with y axis log scale to see if data is better visualized
p2 <- cvia1 %>%
ggplot(aes(x=treat, y=via, fill=treat)) +
geom_boxplot() +
theme_classic() +
scale_fill_manual(values=c("light blue","white")) +
labs(x="Treatment", y="% Viability") +
labs(fill='Treatments') +
scale_y_continuous(trans='log10') +
geom_jitter(position = position_jitterdodge())
p2
#heat treatment boxplot
p3 <- hvia1 %>%
ggplot(aes(x=treat, y=via, fill=treat)) +
scale_fill_manual(values=c("white","red", "dark red")) +
geom_boxplot() +
theme_classic() +
labs(x="Treatment", y="% Viability") +
labs(fill='Treatments') +
geom_jitter(position = position_jitterdodge())
p3
#heat treatment boxplot with y axis log scale to see if data is better visualized
p4 <- hvia1 %>%
ggplot(aes(x=treat, y=via, fill=treat)) +
scale_fill_manual(values=c("white","red", "dark red")) +
geom_boxplot() +
theme_classic() +
labs(x="Treatment", y="% Viability") +
labs(fill='Treatments') +
scale_y_continuous(trans='log10') +
geom_jitter(position = position_jitterdodge())
p4
#heat treatment boxplot
p3 <- hvia1 %>%
ggplot(aes(x=treat, y=via, fill=treat)) +
geom_boxplot(outlier.shape = NA) +
scale_fill_manual(values=c("white","red", "dark red")) +
theme_classic() +
labs(x="Treatment", y="% Viability") +
labs(fill='Treatments') +
geom_jitter(position = position_jitterdodge())
#heat treatment boxplot with y axis log scale to see if data is better visualized
p4 <- hvia1 %>%
ggplot(aes(x=treat, y=via, fill=treat)) +
geom_boxplot(outlier.shape = NA) +
scale_fill_manual(values=c("white","red", "dark red")) +
theme_classic() +
labs(x="Treatment", y="% Viability") +
labs(fill='Treatments') +
scale_y_continuous(trans='log10') +
geom_jitter(position = position_jitterdodge())
